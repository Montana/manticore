from ..platforms.platform import SyscallNotImplemented, unimplemented


class SyscallStubs:
    """
    DEVELOPING NEW SYSTEM CALLS:
    * Whenever you need to add proper support for a system call to Manticore, cut and paste the stub from this file into
      manticore/platforms/linux.py.
    * The stubs include the correct names and number of parameters, but do not include type information
    * The docstrings for each sub describe what it should return on success and on error.
    * Filling out docstrings for params is left as an exercise for the reader.
    * If self.default_to_fail is set, the stubs will do whatever the syscall would do when an error occurs
        * Otherwise, they'll try to pretend that they succeeded.
    * If the stub doesn't know what behavior to produce, it'll raise a SyscallNotImplemented exception
        * Examples include: When a call doesn't just return -1 on failure or 0 on success
    """

    def __init__(self, *, default_to_fail=False, parent=None):
        self.default_to_fail = default_to_fail
        self.parent = parent

    def __getattr__(self, item):
        print("System calls should be copied and pasted into linux.py, not implemented within the stub file.",
              "If you're seeing this message, you may have forgotten to do that.")
        return getattr(self.parent, item)

    @unimplemented
    def sys_accept4(self, fd, upeer_sockaddr, upeer_addrlen, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Accept a connection on a socket
        success: Returns a nonnegative integer that is a descriptor for the accepted socket
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(288, 'sys_accept4')

    @unimplemented
    def sys_add_key(self, _type, _description, _payload, plen) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Add a key to the kernel's key management facility
        success: Returns the serial number of the key it created or updated
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(248, 'sys_add_key')

    @unimplemented
    def sys_adjtimex(self, txc_p) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Tune kernel clock
        success: Returns the clock state
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(159, 'sys_adjtimex')

    @unimplemented
    def sys_alarm(self, seconds) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set an alarm clock for delivery of a signal
        success: Returns the number of seconds remaining until any previously scheduled alarm was due to be delivered, or 0 if there was
                 no previously scheduled alarm
        error: Always succeeds
        '''
        raise SyscallNotImplemented(37, 'sys_alarm')

    @unimplemented
    def sys_bpf(self, cmd, attr, size) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Perform a command on an extended bpf map or program
        success: Returns depends on the operation - BPF_MAP_CREATE The new file descriptor associated with the eBPF map. BPF_PROG_LOAD
                 The new file descriptor associated with the eBPF program. All other commands 0.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(321, 'sys_bpf')

    @unimplemented
    def sys_capget(self, header, dataptr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get capabilities of thread(s)
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_capset(self, header, data) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set capabilities of thread(s)
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_clock_getres(self, which_clock, tp) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Clock and time functions
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_clock_nanosleep(self, which_clock, flags, rqtp, rmtp) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        High-resolution sleep with specifiable clock
        success: Returns 0
        error: Returns an error number
        '''
        if self.default_to_fail:
            raise SyscallNotImplemented(230, 'sys_clock_nanosleep')
        else:
            return 0

    @unimplemented
    def sys_clock_settime(self, which_clock, tp) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Clock and time functions
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_connect(self, fd, uservaddr, addrlen) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Initiate a connection on a socket
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_creat(self, pathname, mode) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Open and possibly create a file
        success: Returns the new file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(85, 'sys_creat')

    @unimplemented
    def sys_delete_module(self, name_user, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Unload a kernel module
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_dup3(self, oldfd, newfd, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Duplicate a file descriptor
        success: Returns the new descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(292, 'sys_dup3')

    @unimplemented
    def sys_epoll_create(self, size) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Open an epoll file descriptor
        success: Returns a nonnegative file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(213, 'sys_epoll_create')

    @unimplemented
    def sys_epoll_create1(self, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Open an epoll file descriptor
        success: Returns a nonnegative file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(291, 'sys_epoll_create1')

    @unimplemented
    def sys_epoll_ctl(self, epfd, op, fd, event) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Control interface for an epoll descriptor
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_epoll_pwait(self, epfd, events, maxevents, timeout, sigmask, sigsetsize) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Wait for an i/o event on an epoll file descriptor
        success: Returns the number of file descriptors ready for the requested I/O, or 0 if no file descriptor became ready during the
                 requested timeout milliseconds
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(281, 'sys_epoll_pwait')

    @unimplemented
    def sys_epoll_wait(self, epfd, events, maxevents, timeout) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Wait for an i/o event on an epoll file descriptor
        success: Returns the number of file descriptors ready for the requested I/O, or 0 if no file descriptor became ready during the
                 requested timeout milliseconds
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(232, 'sys_epoll_wait')

    @unimplemented
    def sys_eventfd(self, count) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create a file descriptor for event notification
        success: Returns a new eventfd file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(284, 'sys_eventfd')

    @unimplemented
    def sys_faccessat(self, dfd, filename, mode) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Check user's permissions for a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fallocate(self, fd, mode, offset, len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Manipulate file space
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fanotify_init(self, flags, event_f_flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create and initialize fanotify group
        success: Returns a new file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(300, 'sys_fanotify_init')

    @unimplemented
    def sys_fanotify_mark(self, fanotify_fd, flags, mask, dfd, pathname) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Add, remove, or modify an fanotify mark on a filesystem object
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fchdir(self, fd) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change working directory
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fchmod(self, fd, mode) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change permissions of a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fchmodat(self, dfd, filename, mode) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change permissions of a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fchown(self, fd, user, group) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change ownership of a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fchownat(self, dfd, filename, user, group, flag) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change ownership of a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fcntl(self, fd, cmd, arg) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Manipulate file descriptor
        success: Returns depends on the operation-- F_DUPFD The new descriptor. F_GETFD Value of file descriptor flags. F_GETFL Value of
                 file status flags. F_GETLEASE Type of lease held on file descriptor. F_GETOWN Value of descriptor owner. F_GETSIG Value
                 of signal sent when read or write becomes possible, or 0 for traditional SIGIO behavior. F_GETPIPE_SZ ", " F_SETPIPE_SZ
                 The pipe capacity. F_GET_SEALS A bit mask identifying the seals that have been set for the inode referred to by fd. All
                 other commands 0.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(72, 'sys_fcntl')

    @unimplemented
    def sys_fdatasync(self, fd) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Synchronize a file's in-core state with storage device
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fgetxattr(self, fd, name, value, size) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Retrieve an extended attribute value
        success: Returns a positive number indicating the size of the extended attribute value
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(193, 'sys_fgetxattr')

    @unimplemented
    def sys_finit_module(self, fd, uargs, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Load a kernel module
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_flistxattr(self, fd, list, size) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        List extended attribute names
        success: Returns a positive number indicating the size of the extended attribute name list
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(196, 'sys_flistxattr')

    @unimplemented
    def sys_flock(self, fd, cmd) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Apply or remove an advisory lock on an open file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fremovexattr(self, fd, name) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Remove an extended attribute
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fsetxattr(self, fd, name, value, size, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set an extended attribute value
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_fstatfs(self, fd, buf) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get filesystem statistics
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_futimesat(self, dfd, filename, utimes) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change timestamps of a file relative to a directory file descriptor
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_get_mempolicy(self, policy, nmask, maxnode, addr, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Retrieve numa memory policy for a thread
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_get_robust_list(self, pid, head_ptr, len_ptr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get list of robust futexes
        success: Returns 0
        error: Returns an error code
        '''
        if self.default_to_fail:
            raise SyscallNotImplemented(274, 'sys_get_robust_list')
        else:
            return 0

    @unimplemented
    def sys_getcpu(self, cpup, nodep, unused) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Determine cpu and numa node on which the calling thread is running
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_getdents64(self, fd, dirent, count) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get directory entries
        success: Returns the number of bytes read - On end of directory, 0
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(217, 'sys_getdents64')

    @unimplemented
    def sys_getgroups(self, gidsetsize, grouplist) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get list of supplementary group ids
        success: Returns the number of supplementary group IDs
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(115, 'sys_getgroups')

    @unimplemented
    def sys_getitimer(self, which, value) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get value of an interval timer
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_getpeername(self, fd, usockaddr, usockaddr_len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get name of connected peer socket
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_getpgid(self, pid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get process group
        success: Returns a process group
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(121, 'sys_getpgid')

    @unimplemented
    def sys_getpgrp(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get process group
        success: POSIX.1 - the PGID of the caller. BSD - a process group
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(111, 'sys_getpgrp')

    @unimplemented
    def sys_getppid(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get process identification
        success: Returns the process ID of the parent of the calling process
        error: Always succeeds
        '''
        raise SyscallNotImplemented(110, 'sys_getppid')

    @unimplemented
    def sys_getpriority(self, which, who) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get program scheduling priority
        success: Returns the calling thread's nice value
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(140, 'sys_getpriority')

    @unimplemented
    def sys_getresgid(self, rgid, egid, sgid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get real, effective and saved group ids
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_getresuid(self, ruid, euid, suid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get real, effective and saved user ids
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_getrusage(self, who, ru) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get resource usage
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_getsid(self, pid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get session id
        success: Returns a session ID
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(124, 'sys_getsid')

    @unimplemented
    def sys_getsockname(self, fd, usockaddr, usockaddr_len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get socket name
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_getsockopt(self, fd, level, optname, optval, optlen) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get options on sockets
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_gettimeofday(self, tv, tz) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get time
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_getxattr(self, pathname, name, value, size) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Retrieve an extended attribute value
        success: Returns a positive number indicating the size of the extended attribute value
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(191, 'sys_getxattr')

    @unimplemented
    def sys_init_module(self, umod, len, uargs) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Load a kernel module
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_inotify_add_watch(self, fd, pathname, mask) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Add a watch to an initialized inotify instance
        success: Returns a nonnegative watch descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(254, 'sys_inotify_add_watch')

    @unimplemented
    def sys_inotify_init(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Initialize an inotify instance
        success: Returns a new file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(253, 'sys_inotify_init')

    @unimplemented
    def sys_inotify_init1(self, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Initialize an inotify instance
        success: Returns a new file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(294, 'sys_inotify_init1')

    @unimplemented
    def sys_inotify_rm_watch(self, fd, wd) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Remove an existing watch from an inotify instance
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_io_cancel(self, ctx_id, iocb, result) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Cancel an outstanding asynchronous i/o operation
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_io_destroy(self, ctx) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Destroy an asynchronous i/o context
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_io_getevents(self, ctx_id, min_nr, nr, events) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Read asynchronous i/o events from the completion queue
        success: Returns the number of events read
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(208, 'sys_io_getevents')

    @unimplemented
    def sys_io_setup(self, nr_events, ctxp) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create an asynchronous i/o context
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_io_submit(self, ctx_id, nr, iocbpp) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Submit asynchronous i/o blocks for processing
        success: Returns the number of iocbs submitted
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(209, 'sys_io_submit')

    @unimplemented
    def sys_ioperm(self, _from, num, turn_on) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set port input/output permissions
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_ioprio_get(self, which, who) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get i/o scheduling class and priority
        success: Returns the ioprio value of the process with highest I/O priority of any of the processes that match the criteria
                 specified
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(252, 'sys_ioprio_get')

    @unimplemented
    def sys_ioprio_set(self, which, who, ioprio) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set i/o scheduling class and priority
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_kcmp(self, pid1, pid2, type, idx1, idx2) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Compare two processes to determine if they share a kernel resource
        success: Returns the result of arithmetic comparison of kernel pointers
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(312, 'sys_kcmp')

    @unimplemented
    def sys_kexec_file_load(self, kernel_fd, initrd_fd, cmdline_len, cmdline_ptr, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Load a new kernel for later execution
        success: Returns s 0
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(320, 'sys_kexec_file_load')

    @unimplemented
    def sys_kexec_load(self, entry, nr_segments, segments, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Load a new kernel for later execution
        success: Returns s 0
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(246, 'sys_kexec_load')

    @unimplemented
    def sys_keyctl(self, option, arg2, arg3, arg4, arg5) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Manipulate the kernel's key management facility
        success: Returns the serial number of the key it found
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(250, 'sys_keyctl')

    @unimplemented
    def sys_lchown(self, filename, user, group) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change ownership of a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_lgetxattr(self, pathname, name, value, size) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Retrieve an extended attribute value
        success: Returns a positive number indicating the size of the extended attribute value
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(192, 'sys_lgetxattr')

    @unimplemented
    def sys_linkat(self, oldfd, oldname, newfd, newname, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Make a new name for a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_listxattr(self, pathname, list, size) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        List extended attribute names
        success: Returns a positive number indicating the size of the extended attribute name list
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(194, 'sys_listxattr')

    @unimplemented
    def sys_llistxattr(self, pathname, list, size) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        List extended attribute names
        success: Returns a positive number indicating the size of the extended attribute name list
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(195, 'sys_llistxattr')

    @unimplemented
    def sys_lookup_dcookie(self, cookie64, buf, len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Return a directory entry's path
        success: Returns the length of the path string copied into the buffer
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(212, 'sys_lookup_dcookie')

    @unimplemented
    def sys_lremovexattr(self, pathname, name) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Remove an extended attribute
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_lsetxattr(self, pathname, name, value, size, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set an extended attribute value
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mbind(self, start, len, mode, nmask, maxnode, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set memory policy for a memory range
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_membarrier(self, cmd, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Issue memory barriers on a set of threads
        success: Returns the MEMBARRIER_CMD_QUERY operation a bit mask of supported commands and the MEMBARRIER_CMD_SHARED operation 0
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(324, 'sys_membarrier')

    @unimplemented
    def sys_memfd_create(self, uname_ptr, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create an anonymous file
        success: Returns a new file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(319, 'sys_memfd_create')

    @unimplemented
    def sys_migrate_pages(self, pid, maxnode, old_nodes, new_nodes) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Move all pages in a process to another set of nodes
        success: Returns the number of pages that could not be moved (i.e., a return of 0 means that all pages were successfully moved).
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(256, 'sys_migrate_pages')

    @unimplemented
    def sys_mincore(self, start, len, vec) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Determine whether pages are resident in memory
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mknod(self, filename, mode, dev) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create a special or ordinary file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mknodat(self, dfd, filename, mode, dev) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create a special or ordinary file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mlock(self, start, len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Lock and unlock memory
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mlock2(self, start, len, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Lock and unlock memory
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mlockall(self, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Lock and unlock memory
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_modify_ldt(self, func, ptr, bytecount) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get or set a per-process ldt entry
        success: Returns either the actual number of bytes read (for reading) or 0 (for writing)
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(154, 'sys_modify_ldt')

    @unimplemented
    def sys_mount(self, dev_name, dir_name, type, flags, data) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Mount filesystem
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_move_pages(self, pid, nr_pages, pages, nodes, status, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Move individual pages of a process to another node
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mq_notify(self, mqdes, u_notification) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Register for notification when a message is available
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mq_open(self, u_name, oflag, mode, u_attr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Open a message queue
        success: Returns a message queue descriptor for use by other message queue functions
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(240, 'sys_mq_open')

    @unimplemented
    def sys_mq_timedreceive(self, mqdes, u_msg_ptr, msg_len, u_msg_prio, u_abs_timeout) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Receive a message from a message queue
        success: Returns the number of bytes in the received message
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(243, 'sys_mq_timedreceive')

    @unimplemented
    def sys_mq_timedsend(self, mqdes, u_msg_ptr, msg_len, msg_prio, u_abs_timeout) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Send a message to a message queue
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mq_unlink(self, u_name) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Remove a message queue
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_mremap(self, addr, old_len, new_len, flags, new_addr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Remap a virtual memory address
        success: Returns a pointer to the new virtual memory area
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(25, 'sys_mremap')

    @unimplemented
    def sys_msgctl(self, msqid, cmd, buf) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        System v message control operations
        success: IPC_STAT, IPC_SET, and IPC_RMID return 0. A successful IPC_INFO or MSG_INFO operation the index of the highest used
                 entry in the kernel's internal array recording information about all message queues. (This information can be used with
                 repeated MSG_STAT operations to obtain information about all queues on the system.) A successful MSG_STAT operation the
                 identifier of the queue whose index was given in msqid.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(71, 'sys_msgctl')

    @unimplemented
    def sys_msgget(self, key, msgflg) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get a system v message queue identifier
        success: Returns the message queue identifier (a nonnegative integer)
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(68, 'sys_msgget')

    @unimplemented
    def sys_msgrcv(self, msqid, msgp, msgsz, msgtyp, msgflg) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        System v message queue operations
        success: Returns the number of bytes actually copied into the mtext array
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(70, 'sys_msgrcv')

    @unimplemented
    def sys_msgsnd(self, msqid, msgp, msgsz, msgflg) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        System v message queue operations
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_msync(self, start, len, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Synchronize a file with a memory map
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_munlock(self, start, len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Lock and unlock memory
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_munlockall(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Lock and unlock memory
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_name_to_handle_at(self, dfd, name, handle, mnt_id, flag) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Obtain handle for a pathname and open file via a handle
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_open_by_handle_at(self, dfd, name, handle, mnt_id, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Obtain handle for a pathname and open file via a handle
        success: Returns a nonnegative file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(304, 'sys_open_by_handle_at')

    @unimplemented
    def sys_pause(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Wait for signal
        success: Never returns
        error: Returns -1
        '''
        return -1

    @unimplemented
    def sys_perf_event_open(self, attr_uptr, pid, cpu, group_fd, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set up performance monitoring
        success: Returns the new file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(298, 'sys_perf_event_open')

    @unimplemented
    def sys_personality(self, personality) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set the process execution domain
        success: Returns the previous persona
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(135, 'sys_personality')

    @unimplemented
    def sys_pivot_root(self, new_root, put_old) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change the root filesystem
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_poll(self, ufds, nfds, timeout_msecs) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Wait for some event on a file descriptor
        success: Returns a positive number; this is the number of structures which have nonzero revents fields (in other words, those
                 descriptors with events or errors reported). A value of 0 indicates that the call timed out and no file descriptors were
                 ready.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(7, 'sys_poll')

    @unimplemented
    def sys_ppoll(self, ufds, nfds, tsp, sigmask, sigsetsize) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Wait for some event on a file descriptor
        success: Returns a positive number; this is the number of structures which have nonzero revents fields (in other words, those
                 descriptors with events or errors reported). A value of 0 indicates that the call timed out and no file descriptors were
                 ready.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(271, 'sys_ppoll')

    @unimplemented
    def sys_prctl(self, option, arg2, arg3, arg4, arg5) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Operations on a process
        success: PR_GET_DUMPABLE , PR_GET_KEEPCAPS , PR_GET_NO_NEW_PRIVS , PR_GET_THP_DISABLE , PR_CAPBSET_READ , PR_GET_TIMING ,
                 PR_GET_TIMERSLACK , PR_GET_SECUREBITS , PR_MCE_KILL_GET, PR_CAP_AMBIENT + PR_CAP_AMBIENT_IS_SET , and (if it returns)
                 PR_GET_SECCOMP return the nonnegative values described above. All other option values return 0 on success.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(157, 'sys_prctl')

    @unimplemented
    def sys_preadv(self, fd, vec, vlen, pos_l, pos_h) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Read data into multiple buffers
        success: Returns the number of bytes read. Note that is not an error for a successful call to transfer fewer bytes than requested
                 (see read (2) and write (2)).
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(295, 'sys_preadv')

    @unimplemented
    def sys_process_vm_readv(self, pid, lvec, liovcnt, rvec, riovcnt, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Transfer data between process address spaces
        success: Returns the number of bytes read. This return value may be less than the total number of requested bytes, if a partial
                 read/write occurred.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(310, 'sys_process_vm_readv')

    @unimplemented
    def sys_process_vm_writev(self, pid, lvec, liovcnt, rvec, riovcnt, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Transfer data between process address spaces
        success: Returns the number of bytes written. This return value may be less than the total number of requested bytes, if a
                 partial read/write occurred.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(311, 'sys_process_vm_writev')

    @unimplemented
    def sys_ptrace(self, request, pid, addr, data) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Process trace
        success: Returns the PTRACE_PEEK* requests return the requested data, while other requests return 0
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(101, 'sys_ptrace')

    @unimplemented
    def sys_pwritev(self, fd, vec, vlen, pos_l, pos_h) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Write data into multiple buffers
        success: Returns the number of bytes written. Note that is not an error for a successful call to transfer fewer bytes than
                 requested (see read (2) and write (2)).
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(296, 'sys_pwritev')

    @unimplemented
    def sys_quotactl(self, cmd, special, id, addr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Manipulate disk quotas
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_readahead(self, fd, offset, count) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Initiate file readahead into page cache
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_readlinkat(self, dfd, pathname, buf, bufsiz) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Read value of a symbolic link
        success: Returns the number of bytes placed in buf
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(267, 'sys_readlinkat')

    @unimplemented
    def sys_reboot(self, magic1, magic2, cmd, arg) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Reboot or enable/disable ctrl-alt-del
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_recvfrom(self, fd, ubuf, size, flags, addr, addr_len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Receive a message from a socket
        success: Returns the number of bytes received. When a stream socket peer has performed an orderly shutdown, the return value will
                 be 0 (the traditional "end-of-file" return). Datagram sockets in various domains (e.g., the UNIX and Internet domains)
                 permit zero-length datagrams. When such a datagram is received, the return value is 0. The value 0 may also be returned
                 if the requested number of bytes to receive from a stream socket was 0.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(45, 'sys_recvfrom')

    @unimplemented
    def sys_recvmmsg(self, fd, mmsg, vlen, flags, timeout) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Receive multiple messages on a socket
        success: Returns the number of messages received in msgvec
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(299, 'sys_recvmmsg')

    @unimplemented
    def sys_recvmsg(self, fd, msg, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Receive a message from a socket
        success: Returns the number of bytes received. When a stream socket peer has performed an orderly shutdown, the return value will
                 be 0 (the traditional "end-of-file" return). Datagram sockets in various domains (e.g., the UNIX and Internet domains)
                 permit zero-length datagrams. When such a datagram is received, the return value is 0. The value 0 may also be returned
                 if the requested number of bytes to receive from a stream socket was 0.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(47, 'sys_recvmsg')

    @unimplemented
    def sys_remap_file_pages(self, start, size, prot, pgoff, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create a nonlinear file mapping
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_removexattr(self, pathname, name) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Remove an extended attribute
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_renameat(self, oldfd, oldname, newfd, newname) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change the name or location of a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_renameat2(self, olddfd, oldname, newdfd, newname, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change the name or location of a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_request_key(self, _type, _description, _callout_info, destringid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Request a key from the kernel's key management facility
        success: Returns the serial number of the key it found
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(249, 'sys_request_key')

    @unimplemented
    def sys_restart_syscall(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Restart a system call after interruption by a stop signal
        success: Returns the return value of whatever system call is being restarted
        error: Returns the return value of whatever system call is being restarted
        '''
        if self.default_to_fail:
            raise SyscallNotImplemented(219, 'sys_restart_syscall')
        else:
            raise SyscallNotImplemented(219, 'sys_restart_syscall')

    @unimplemented
    def sys_rt_sigpending(self, set, sigsetsize) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Examine pending signals
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_rt_sigqueueinfo(self, pid, sig, uinfo) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Queue a signal and data
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_rt_sigsuspend(self, unewset, sigsetsize) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Wait for a signal
        success: Never succeeds
        error: Returns -1
        '''
        return -1 if self.default_to_fail else -1

    @unimplemented
    def sys_rt_sigtimedwait(self, uthese, uinfo, uts, sigsetsize) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Synchronously wait for queued signals
        success: Returns a signal number
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(128, 'sys_rt_sigtimedwait')

    @unimplemented
    def sys_rt_tgsigqueueinfo(self, tgid, pid, sig, uinfo) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Queue a signal and data
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sched_get_priority_max(self, policy) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get static priority range
        success: Returns the maximum priority value for the named scheduling policy
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(146, 'sys_sched_get_priority_max')

    @unimplemented
    def sys_sched_get_priority_min(self, policy) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get static priority range
        success: Returns the minimum priority value for the named scheduling policy
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(147, 'sys_sched_get_priority_min')

    @unimplemented
    def sys_sched_getaffinity(self, pid, len, user_mask_ptr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get a thread's cpu affinity mask
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sched_getattr(self, pid, attr, size, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get scheduling policy and attributes
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sched_getparam(self, pid, param) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get scheduling parameters
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sched_getscheduler(self, pid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get scheduling policy/parameters
        success: Returns the policy for the thread (a nonnegative integer)
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(145, 'sys_sched_getscheduler')

    @unimplemented
    def sys_sched_rr_get_interval(self, pid, interval) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get the sched_rr interval for the named process
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sched_setaffinity(self, pid, len, user_mask_ptr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set a thread's cpu affinity mask
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sched_setattr(self, pid, attr, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set scheduling policy and attributes
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sched_setparam(self, pid, param) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set scheduling parameters
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sched_setscheduler(self, pid, policy, param) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set scheduling policy/parameters
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sched_yield(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Yield the processor
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_seccomp(self, op, flags, uargs) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Operate on secure computing state of the process
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_select(self, n, inp, outp, fd_setexp, tvp) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Synchronous i/o multiplexing
        success: Returns the number of file descriptors contained in the three returned descriptor sets (that is, the total number of
                 bits that are set in readfds, writefds, exceptfds ) which may be 0 if the timeout expires before anything interesting
                 happens
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(23, 'sys_select')

    @unimplemented
    def sys_semctl(self, semid, semnum, cmd, arg) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        System v semaphore control operations
        success: Returns 0, or a semaphore value depending on cmd
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(66, 'sys_semctl')

    @unimplemented
    def sys_semget(self, key, nsems, semflg) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get a system v semaphore set identifier
        success: Returns the semaphore set identifier (a nonnegative integer)
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(64, 'sys_semget')

    @unimplemented
    def sys_semop(self, semid, tsops, nsops) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        System v semaphore operations
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_semtimedop(self, semid, tsops, nsops, timeout) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        System v semaphore operations
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sendmmsg(self, fd, mmsg, vlen, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Send multiple messages on a socket
        success: Returns the number of messages sent from msgvec
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(307, 'sys_sendmmsg')

    @unimplemented
    def sys_sendmsg(self, fd, msg, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Send a message on a socket
        success: Returns the number of bytes sent
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(46, 'sys_sendmsg')

    @unimplemented
    def sys_sendto(self, fd, buff, len, flags, addr, addr_len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Send a message on a socket
        success: Returns the number of bytes sent
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(44, 'sys_sendto')

    @unimplemented
    def sys_set_mempolicy(self, mode, nmask, maxnode) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set default numa memory policy for a thread and its children
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_set_robust_list(self, head, len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set list of robust futexes
        success: Returns 0
        error: Returns an error code
        '''
        if self.default_to_fail:
            raise SyscallNotImplemented(273, 'sys_set_robust_list')
        else:
            return 0

    @unimplemented
    def sys_setdomainname(self, name, len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set nis domain name
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setfsgid(self, gid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set group identity used for filesystem checks
        success: Returns the previous filesystem group ID of the caller
        error: Returns the previous filesystem group ID of the caller
        '''
        if self.default_to_fail:
            raise SyscallNotImplemented(123, 'sys_setfsgid')
        else:
            raise SyscallNotImplemented(123, 'sys_setfsgid')

    @unimplemented
    def sys_setfsuid(self, uid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set user identity used for filesystem checks
        success: Returns the previous filesystem user ID of the caller
        error: Returns the previous filesystem user ID of the caller
        '''
        if self.default_to_fail:
            raise SyscallNotImplemented(122, 'sys_setfsuid')
        else:
            raise SyscallNotImplemented(122, 'sys_setfsuid')

    @unimplemented
    def sys_setgid(self, gid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set group identity
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setgroups(self, gidsetsize, grouplist) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set list of supplementary group ids
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sethostname(self, name, len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set hostname
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setitimer(self, which, value, ovalue) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set value of an interval timer
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setns(self, fd, nstype) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Reassociate thread with a namespace
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setpgid(self, pid, pgid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set process group
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setpriority(self, which, who, niceval) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set program scheduling priority
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setregid(self, rgid, egid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set real and/or effective group id
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setresgid(self, rgid, egid, sgid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set real, effective and saved group id
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setresuid(self, ruid, euid, suid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set real, effective and saved user id
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setreuid(self, ruid, euid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set real and/or effective user id
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setrlimit(self, resource, rlim) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set resource limits
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setsid(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Creates a session and sets the process group id
        success: Returns the (new) session ID of the calling process
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(112, 'sys_setsid')

    @unimplemented
    def sys_setsockopt(self, fd, level, optname, optval, optlen) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set options on sockets
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_settimeofday(self, tv, tz) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set time
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setuid(self, uid) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set user identity
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_setxattr(self, pathname, name, value, size, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set an extended attribute value
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_shmat(self, shmid, shmaddr, shmflg) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        System v shared memory operations
        success: Returns the address of the attached shared memory segment
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(30, 'sys_shmat')

    @unimplemented
    def sys_shmctl(self, shmid, cmd, buf) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        System v shared memory control
        success: A successful IPC_INFO or SHM_INFO operation returns the index of the highest used entry in the kernel's internal array
                 recording information about all shared memory segments. A successful SHM_STAT operation returns the identifier of the
                 shared memory segment whose index was given in shmid. Other operations return 0 on success.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(31, 'sys_shmctl')

    @unimplemented
    def sys_shmdt(self, shmaddr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        System v shared memory operations
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_shmget(self, key, size, shmflg) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Allocates a system v shared memory segment
        success: Returns a valid shared memory identifier
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(29, 'sys_shmget')

    @unimplemented
    def sys_shutdown(self, fd, how) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Shut down part of a full-duplex connection
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sigaltstack(self, uss, uoss) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Set and/or get signal stack context
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_signalfd(self, ufd, user_mask, sizemask) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create a file descriptor for accepting signals
        success: Returns a signalfd file descriptor; this is either a new file descriptor (if fd was -1), or fd if fd was a valid
                 signalfd file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(282, 'sys_signalfd')

    @unimplemented
    def sys_socketpair(self, family, type, protocol, usockvec) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create a pair of connected sockets
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_splice(self, fd_in, off_in, fd_out, off_out, len, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Splice data to/from a pipe
        success: Returns the number of bytes spliced to or from the pipe. A return value of 0 means that there was no data to transfer,
                 and it would not make sense to block, because there are no writers connected to the write end of the pipe referred to by
                 fd_in.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(275, 'sys_splice')

    @unimplemented
    def sys_statfs(self, pathname, buf) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get filesystem statistics
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_swapoff(self, specialfile) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Start/stop swapping to file/device
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_swapon(self, specialfile, swap_flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Start/stop swapping to file/device
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_symlink(self, oldname, newname) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Make a new name for a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_symlinkat(self, oldname, newfd, newname) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Make a new name for a file
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sync(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Commit buffer cache to disk
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sync_file_range(self, fd, offset, bytes, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Sync a file segment with disk
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_syncfs(self, fd) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Commit buffer cache to disk
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_sysfs(self, option, arg1, arg2) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get filesystem type information
        success: Returns the filesystem index for option 1, 0 for option 2 , and the number of currently configured filesystems for
                 option 3
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(139, 'sys_sysfs')

    @unimplemented
    def sys_sysinfo(self, info) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Returns information on overall system statistics
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_syslog(self, type, buf, len) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Read and/or clear kernel message ring buffer; set console_loglevel
        success: For type equal to 2, 3, or 4, a successful call to returns the number of bytes read. For type 9, returns the number of
                 bytes currently available to be read on the kernel log buffer. For type 10, returns the total size of the kernel log
                 buffer. For other values of type, 0 on success.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(103, 'sys_syslog')

    @unimplemented
    def sys_tee(self, fdin, fdout, len, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Duplicating pipe content
        success: Returns the number of bytes that were duplicated between the input and output. A return value of 0 means that there was
                 no data to transfer, and it would not make sense to block, because there are no writers connected to the write end of
                 the pipe referred to by fd_in.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(276, 'sys_tee')

    @unimplemented
    def sys_tgkill(self, tgid, pid, sig) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Send a signal to a thread
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_timer_create(self, which_clock, timer_event_spec, created_timer_id) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Create a posix per-process timer
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_timer_delete(self, timer_id) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Delete a posix per-process timer
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_timer_getoverrun(self, timer_id) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get overrun count for a posix per-process timer
        success: Returns the overrun count of the specified timer; this count may be 0 if no overruns have occurred
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(225, 'sys_timer_getoverrun')

    @unimplemented
    def sys_timer_gettime(self, timer_id, setting) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Arm/disarm and fetch state of posix per-process timer
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_timer_settime(self, timer_id, flags, new_setting, old_setting) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Arm/disarm and fetch state of posix per-process timer
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_timerfd_create(self, clockid, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Timers that notify via file descriptors
        success: Returns a new file descriptor
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(283, 'sys_timerfd_create')

    @unimplemented
    def sys_timerfd_gettime(self, ufd, otmr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Timers that notify via file descriptors
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_timerfd_settime(self, ufd, flags, utmr, otmr) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Timers that notify via file descriptors
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_times(self, info) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get process times
        success: Returns the number of clock ticks that have elapsed since an arbitrary point in the past. The return value may overflow
                 the possible range of type clock_t.
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(100, 'sys_times')

    @unimplemented
    def sys_tkill(self, pid, sig) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Send a signal to a thread
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_truncate(self, path, length) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Truncate a file to a specified length
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_unlinkat(self, dfd, pathname, flag) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Delete a name and possibly the file it refers to
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_unshare(self, unshare_flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Disassociate parts of the process execution context
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_ustat(self, dev, ubuf) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Get filesystem statistics
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_utime(self, filename, times) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change file last access and modification times
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_utimensat(self, dfd, filename, utimes, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change file timestamps with nanosecond precision
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_utimes(self, filename, utimes) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Change file last access and modification times
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_vhangup(self) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Virtually hangup the current terminal
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0

    @unimplemented
    def sys_vmsplice(self, fd, iov, nr_segs, flags) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Splice user pages into a pipe
        success: Returns the number of bytes transferred to the pipe
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(278, 'sys_vmsplice')

    @unimplemented
    def sys_wait4(self, upid, stat_addr, options, ru) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Wait for process to change state, bsd style
        success: Returns the process ID of the child whose state has changed; if WNOHANG was specified and one or more child(ren)
                 specified by pid exist, but have not yet changed state, then 0
        error: Returns -1
        '''
        if self.default_to_fail:
            return -1
        else:
            raise SyscallNotImplemented(61, 'sys_wait4')

    @unimplemented
    def sys_waitid(self, which, upid, infop, options, ru) -> int:
        ''' AUTOGENERATED UNIMPLEMENTED STUB
        Wait for process to change state
        success: Returns 0
        error: Returns -1
        '''
        return -1 if self.default_to_fail else 0
